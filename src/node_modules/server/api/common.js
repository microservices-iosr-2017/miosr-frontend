import assign from 'lodash/assign';
import jsonpatch from 'fast-json-patch';

export function respondWithResult(res, statusCode) {
  statusCode = statusCode || 200;
  return (entity) => {
    if (entity) {
      return res.status(statusCode).json(entity);
    }
    return null;
  };
}

export function saveUpdates(updates) {
  return (entity) => {
    const updated = assign(entity, updates);
    return updated.saveAsync()
      .spread(result => result);
  };
}

export function patchUpdates(patches) {
  return (entity) => {
    try {
      jsonpatch.apply(entity, patches, /* validate */ true);
    } catch (err) {
      return Promise.reject(err);
    }

    return entity.save();
  };
}

export function removeEntity() {
  return (entity) => {
    if (entity) {
      return entity.remove();
    }
    return null;
  };
}

export function handleEntityNotFound(res) {
  return (entity) => {
    if (!entity) {
      res.status(404).end();
      return null;
    }
    return entity;
  };
}

export function handleError(res, statusCode) {
  statusCode = statusCode || 500;
  return (err) => {
    res.status(statusCode).send(err);
  };
}
