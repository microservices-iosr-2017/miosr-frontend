import React from 'react';
import FormGroup from 'react-bootstrap/lib/FormGroup';
import FormControl from 'react-bootstrap/lib/FormControl';
import Button from 'react-bootstrap/lib/Button';
import Alert from 'react-bootstrap/lib/Alert';
import {redirect} from 'client/sharedjs/redir';
import './home.scss';

const NOERROR = 'NOERROR';

const S_INCORRECT_CREDS = 'Username or password is incorrect!';
const S_UNKNOWN_ERROR = 'Unknown error occured. Please refresh the page and try again.';

const LoginErrorAlert = React.createClass({
  propTypes: {
    errorType: React.PropTypes.string.isRequired,
  },
  render() {
    if (this.props.errorType === 'INCORRECT_CREDENTIALS') {
      return (<Alert bsStyle="warning">{S_INCORRECT_CREDS}</Alert>);
    } else if (this.props.errorType === 'UNKNOWN' || this.props.errorType === 'NETWORK') {
      return (<Alert bsStyle="danger">{S_UNKNOWN_ERROR}</Alert>);
    } else {
      return null;
    }
  },
});

const Login = React.createClass({
  propTypes: {
    authService: React.PropTypes.object.isRequired,
  },

  getInitialState() {
    return {
      username: '',
      password: '',
      status: NOERROR,
    };
  },

  usernameChanged(e) {
    this.setState({username: e.target.value});
  },

  passwordChanged(e) {
    this.setState({password: e.target.value});
  },

  submit(_) {
    this.props.authService.login(this.state.username, this.state.password)
      .then((json) => {
        redirect(json.redirectUrl);
        /* usually this won't execute, but I add this for completness */
        this.setState({status: NOERROR});
      })
      .catch((reason) => {
        this.setState({status: reason.name});
      });
  },

  render() {
    return (
      <div className="tile smallMargin">
        <h2 className="headerText smallMargin">Login to BiteTracker</h2>

        <FormGroup className="centerText">
          <LoginErrorAlert errorType={this.state.status} />
          <FormControl
            id="usernameForm"
            className="inputbox centerText"
            type="text"
            value={this.state.username}
            placeholder="Username"
            onChange={this.usernameChanged}
          />
          <FormControl
            id="passwordForm"
            className="inputbox centerText"
            type="password"
            value={this.state.password}
            placeholder="Password"
            onChange={this.passwordChanged}
          />
          <p className="normalText centerText">Forgot password?</p>
          <Button id="submitButton" className="inputButton" bsStyle="primary" onClick={this.submit}>Log in</Button>
        </FormGroup>
      </div>
    );
  },
});

export default Login;
