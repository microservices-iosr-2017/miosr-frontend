

class NotesStore {
  constructor(actionHolder, source) {
    this.bindListeners({
      onFetch: actionHolder.FETCH,
      onFetchSucceess: actionHolder.FETCH_SUCCESS,
      onFetchFailure: actionHolder.FETCH_FAILURE,
      onSelect: actionHolder.SELECT,
      onDeselect: actionHolder.DESELECT,
    });

    this._source = source;
    this.notesList = []; // list of objects as received from server
    this.selectedNote = null; // object representing current selection
    this.selectionEditable = false;
    this.error = "no error";
  }

  onFetch() {
    this._source.fetch();
  }

  onFetchSucceess(payload) {
    this.setState({notesList: payload, selectedNote: null});
  }

  onFetchFailure(err) {
    this.setState({error: JSON.stringify(err)});
  }

  onSelect(id) {
    if(this.selectedNote) this.onDeselect();
    this.setState({selectedNote: this.notesList[id], selectionEditable: false});
  }

  onDeselect() {
    this.setState({selectedNote: null});
  }
}

export default function build({altInstance, notesActions, notesSource}) {
  return altInstance.createStore(NotesStore, 'NotesStore', notesActions, notesSource);
}
