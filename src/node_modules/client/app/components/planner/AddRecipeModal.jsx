import React, {PropTypes} from 'react';
import ReactDOM from 'react-dom';
import {Button, Modal, FormGroup, FormControl, ControlLabel} from 'react-bootstrap';
import DatePicker from 'react-bootstrap-date-picker';
import RecipeView from '../recipes/recipe/RecipeView';
import Recipe from 'schemas/RecipeSchema';
import {mealTypes} from 'schemas/PlannerEntrySchema';

import './add-recipe-modal.scss';

class AddRecipeModal extends React.Component {
  constructor(...args) {
    super(...args);
    this.state = {open: false};
    this.show = this.show.bind(this);
    this.close = this.close.bind(this);
  }

  show() {
    this.setState({open: true});
  }

  close() {
    this.setState({open: false});
  }

  render() {
    const {recipe, onRecipeAdd, trigger} = this.props;
    return (
      <div>
        {typeof trigger === 'string' ?
          <Button onClick={this.show}>{trigger}</Button>
          : null}
        {typeof trigger === 'function' ?
          React.cloneElement(trigger, {onClick: this.show})
          : null}
        <Modal show={this.state.open} onHide={this.close} className="c__add-recipe-modal">
          <Modal.Header closeButton>
            <Modal.Title>Add Recipe to Planner</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <DatePicker ref={ref => this.datepicker = ref} />
            <FormGroup controlId="formControlsSelect">
              <ControlLabel>Select meal</ControlLabel>
              <FormControl componentClass="select" placeholder="select"
                           ref={ref => this.meal = ref}
                           defaultValue={mealTypes[0]}>
                {mealTypes.map(type => (
                  <option value={type} key={type}>{type}</option>
                ))}
              </FormControl>
            </FormGroup>
            <RecipeView recipe={recipe} />
          </Modal.Body>
          <Modal.Footer>
            <Button bsStyle="primary" onClick={() => {
              onRecipeAdd(recipe, this.datepicker.getValue(), ReactDOM.findDOMNode(this.meal).value);
              this.close();
            }}>Add Recipe</Button>
          </Modal.Footer>
        </Modal>
      </div>
    );
  }
}

AddRecipeModal.propTypes = {
  recipe: Recipe.isRequired,
  onRecipeAdd: PropTypes.func,
  trigger: PropTypes.node
};

AddRecipeModal.defaultProps = {
  onRecipeAdd: () => {
  }
};

export default AddRecipeModal;
