import React from 'react';
import {shallow} from 'enzyme';
import Recipe from 'client/factories/recipe';

import RecipeCard from 'components/recipes/RecipeCard';
import Card from 'components/shared/card/Card';
import defaultImage from 'components/recipes/img/default.png';

describe('<RecipeCard />', () => {
  const wrapper = (recipe) => shallow(<RecipeCard recipe={recipe} />);
  const recipe = Recipe.build();

  it('renders <Card.Title/> with recipe title and subtitle', () => {
    const subject = wrapper(recipe).find(Card.Title);
    expect(subject).to.have.lengthOf(1);
    expect(subject.prop('title')).to.equal(recipe.title);
    expect(subject.prop('subtitle')).to.equal(recipe.subtitle);
  });

  it('renders <Card.Text /> with recipe description', () => {
    const subject = wrapper(recipe).find(Card.Text);
    expect(subject).to.have.lengthOf(1);
    expect(subject.prop('children')).to.equal(recipe.description);
  });

  it('renders <Card.Actions/>', () => {
    const subject = wrapper(recipe).find(Card.Actions);
    expect(subject).to.have.lengthOf(1);
  });

  context('with recipe image', () => {
    const recipeWithImage = Recipe.build({}, {withImage: true});
    const subject = wrapper(recipeWithImage).find(Card.Image);

    it('renders <Card.Image/> with recipe image', () => {
      expect(subject).to.have.lengthOf(1);
      expect(subject.prop('image')).to.equal(recipeWithImage.image);
    });
  });

  context('with no recipe image', () => {
    const subject = wrapper(recipe).find(Card.Image);

    it('renders <Card.Image/> with default image', () => {
      expect(subject).to.have.lengthOf(1);
      expect(subject.prop('image')).to.equal(defaultImage);
    });
  });
});
