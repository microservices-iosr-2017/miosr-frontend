'use strict';

import app from 'server';
import request from 'supertest-as-promised';

/* USED IN COMMENTED OUT TESTS
var newFoodGroup;*/

describe('FoodGroup API:', () => {
  describe('GET /api/food_groups', () => {
    var foodGroups;

    beforeEach(() => {
      return request(app)
        .get('/api/food_groups')
        .expect(200)
        .expect('Content-Type', /json/)
        .then((res) => { foodGroups = res.body; });
    });

    it('should respond with JSON array', () => {
      foodGroups.should.have.deep.property('list.item');
      foodGroups.list.item.should.be.instanceof(Array);
    });
  });
/* NOT YET IMPLEMENTED
  describe('POST /api/food_groups', () => {
    beforeEach((done) => {
      request(app)
        .post('/api/food_groups')
        .send({
          name: 'New FoodGroup',
          info: 'This is the brand new foodGroup!!!',
        })
        .expect(201)
        .expect('Content-Type', /json/)
        .end((err, res) => {
          if(err) {
            return done(err);
          }
          newFoodGroup = res.body;
          done();
        });
    });

    it('should respond with the newly created foodGroup', () => {
      newFoodGroup.name.should.equal('New FoodGroup');
      newFoodGroup.info.should.equal('This is the brand new foodGroup!!!');
    });

  });

  describe('GET /api/food_groups/:id', () => {
    var foodGroup;

    beforeEach((done) => {
      request(app)
        .get('/api/food_groups/' + newFoodGroup._id)
        .expect(200)
        .expect('Content-Type', /json/)
        .end((err, res) => {
          if(err) {
            return done(err);
          }
          foodGroup = res.body;
          done();
        });
    });

    afterEach(() => {
      foodGroup = {};
    });

    it('should respond with the requested foodGroup', () => {
      foodGroup.name.should.equal('New FoodGroup');
      foodGroup.info.should.equal('This is the brand new foodGroup!!!');
    });

  });

  describe('PUT /api/food_groups/:id', () => {
    var updatedFoodGroup;

    beforeEach((done) => {
      request(app)
        .put('/api/food_groups/' + newFoodGroup._id)
        .send({
          name: 'Updated FoodGroup',
          info: 'This is the updated foodGroup!!!',
        })
        .expect(200)
        .expect('Content-Type', /json/)
        .end((err, res) => {
          if(err) {
            return done(err);
          }
          updatedFoodGroup = res.body;
          done();
        });
    });

    afterEach(() => {
      updatedFoodGroup = {};
    });

    it('should respond with the updated foodGroup', () => {
      updatedFoodGroup.name.should.equal('Updated FoodGroup');
      updatedFoodGroup.info.should.equal('This is the updated foodGroup!!!');
    });

  });

  describe('DELETE /api/food_groups/:id', () => {

    it('should respond with 204 on successful removal', (done) => {
      request(app)
        .delete('/api/food_groups/' + newFoodGroup._id)
        .expect(204)
        .end((err, res) => {
          if(err) {
            return done(err);
          }
          done();
        });
    });

    it('should respond with 404 when foodGroup does not exist', (done) => {
      request(app)
        .delete('/api/food_groups/' + newFoodGroup._id)
        .expect(404)
        .end((err, res) => {
          if(err) {
            return done(err);
          }
          done();
        });
    });

  });
*/
});
