const proxyquire = require('proxyquire').noPreserveCache();

const controller = require('tests/server/shared/setup/controller_stub').default('recipe');
const authService = require('tests/server/shared/setup/auth_stub').default();
const router = require('tests/server/shared/setup/router_stub').default();
require('tests/server/shared/behaviors/api_router');

const recipeIndex = proxyquire('server/api/recipe/index.js', {
  'express': {
    Router: () => router,
  },
  './recipe.controller': {
    default: () => controller,
  },
  '../../auth/auth.service': authService,
}).default;

describe('Recipe API Router:', () => {
  it('should return an express router instance', () => {
    recipeIndex.should.equal(router);
  });

  itBehavesLike('API Router', {router, name: 'recipe', url: '/api/recipes'});
});
